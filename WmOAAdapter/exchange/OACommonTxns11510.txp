<?xml version="1.0" encoding="UTF-8"?>

<IDataXMLCoder version="1.0">
  <record javaclass="com.wm.data.ISMemDataImpl">
    <record name="transactions" javaclass="com.wm.data.ISMemDataImpl">
      <record name="getAcctPeriodId" javaclass="com.wm.data.ISMemDataImpl">
        <value name="transactionName">getAcctPeriodId</value>
        <value name="transactionType">OUT</value>
        <null name="AcknowledgeSQL"/>
        <record name="ACCT_PERIOD_ID" javaclass="com.wm.util.Values">
          <value name="SQLOut">select acct_period_id from org_acct_periods OAP,
hr_all_organization_units HAOU
where  period_name = '&amp;PERIOD_NAME*' 
and HAOU.name = '&amp;ORGANIZATION_NAME*'
and OAP.organization_id = HAOU.organization_id 
</value>
          <value name="SQLAlias">ACCT_PERIOD_ID</value>
          <value name="SQLRelation"></value>
        </record>
      </record>
      <record name="getActivityId" javaclass="com.wm.data.ISMemDataImpl">
        <value name="transactionName">getActivityId</value>
        <value name="transactionType">OUT</value>
        <null name="AcknowledgeSQL"/>
        <record name="ACTIVITY_NAME" javaclass="com.wm.util.Values">
          <value name="SQLOut">SELECT ACTIVITY_ID FROM CST_ACTIVITIES WHERE ACTIVITY = '&amp;ACTIVITY_NAME*'</value>
          <value name="SQLAlias">ACTIVITY_NAME</value>
          <value name="SQLRelation"></value>
        </record>
      </record>
      <record name="getAwardId" javaclass="com.wm.data.ISMemDataImpl">
        <value name="transactionName">getAwardId</value>
        <value name="transactionType">OUT</value>
        <null name="AcknowledgeSQL"/>
        <record name="AWARD_ID" javaclass="com.wm.util.Values">
          <value name="SQLOut">SELECT POD1.AWARD_ID
FROM   GMS_AWARDS_ALL GAA , 
PO_DISTRIBUTIONS_ALL POD1
WHERE  POD1.AWARD_ID = GAA.AWARD_ID
AND GAA.AWARD_FULL_NAME = '&amp;AWARD_FULL_NAME*'</value>
          <value name="SQLAlias">AWARD_ID</value>
          <value name="SQLRelation"></value>
        </record>
      </record>
      <record name="getCodeCombinationId" javaclass="com.wm.data.ISMemDataImpl">
        <value name="transactionName">getCodeCombinationId</value>
        <value name="transactionType">OUT</value>
        <null name="AcknowledgeSQL"/>
        <record name="CODECOMBINATION" javaclass="com.wm.util.Values">
          <value name="SQLOut">SELECT /*+ rule */ gcc.CODE_COMBINATION_ID 
FROM GL_CODE_COMBINATIONS_KFV gcc, gl_sets_of_books sob
WHERE gcc.CONCATENATED_SEGMENTS = '&amp;CONCATENATED_SEGMENTS*'
AND gcc.CHART_OF_ACCOUNTS_ID = sob.CHART_OF_ACCOUNTS_ID
AND sob.NAME = NVL('&amp;SET_OF_BOOKS_NAME*', sob.NAME)
</value>
          <value name="SQLAlias">CODECOMBINATION</value>
          <value name="SQLRelation"></value>
        </record>
      </record>
      <record name="getDepartmentId" javaclass="com.wm.data.ISMemDataImpl">
        <value name="transactionName">getDepartmentId</value>
        <value name="transactionType">OUT</value>
        <null name="AcknowledgeSQL"/>
        <record name="DEPARTMENT_ID" javaclass="com.wm.util.Values">
          <value name="SQLOut">select department_id from bom_departments b,org_organization_definitions o
where b.department_code='&amp;department_code*' and o.organization_id=b.organization_id
and o.organization_name='&amp;organization_name*'</value>
          <value name="SQLAlias">DEPARTMENT_ID</value>
          <value name="SQLRelation"></value>
        </record>
      </record>
      <record name="getEmplIdFromFullName" javaclass="com.wm.data.ISMemDataImpl">
        <value name="transactionName">getEmplIdFromFullName</value>
        <value name="transactionType">OUT</value>
        <null name="AcknowledgeSQL"/>
        <record name="EMPLOYEE_ID_FROM_FULL_NAME" javaclass="com.wm.util.Values">
          <value name="SQLOut">SELECT PERSON_ID FROM PER_ALL_PEOPLE_F WHERE UPPER(FULL_NAME) = UPPER('&amp;PERSON_FULL_NAME*') AND  SYSDATE &gt;= EFFECTIVE_START_DATE AND SYSDATE &lt;= EFFECTIVE_END_DATE</value>
          <value name="SQLAlias">EMPLOYEE_ID_FROM_FULL_NAME</value>
          <value name="SQLRelation"></value>
        </record>
      </record>
      <record name="getInventoryItemId" javaclass="com.wm.data.ISMemDataImpl">
        <value name="transactionName">getInventoryItemId</value>
        <value name="transactionType">OUT</value>
        <null name="AcknowledgeSQL"/>
        <record name="INVENTORY" javaclass="com.wm.util.Values">
          <value name="SQLOut">select inventory_item_id from mtl_system_items_b_kfv
mtl,org_organization_definitions org
where concatenated_segments = '&amp;INVENTORY_ITEM*'
and org.organization_id = mtl.organization_id
and org.organization_name = '&amp;ORGANIZATION_NAME*'</value>
          <value name="SQLAlias">INVENTORY</value>
          <value name="SQLRelation"></value>
        </record>
      </record>
      <record name="getKanbanCardId" javaclass="com.wm.data.ISMemDataImpl">
        <value name="transactionName">getKanbanCardId</value>
        <value name="transactionType">OUT</value>
        <null name="AcknowledgeSQL"/>
        <record name="KANBAN_CARD_ID" javaclass="com.wm.util.Values">
          <value name="SQLOut">SELECT kanban_card_id FROM mtl_kanban_cards MKC,
hr_all_organization_units HAOU
WHERE  kanban_card_number = '&amp;KANBAN_CARD_NUMBER*' 
AND HAOU.name = '&amp;ORGANIZATION_NAME*'
AND MKC.organization_id = HAOU.organization_id </value>
          <value name="SQLAlias">KANBAN_CARD_ID</value>
          <value name="SQLRelation"></value>
        </record>
      </record>
      <record name="getLocationCodeCombination" javaclass="com.wm.data.ISMemDataImpl">
        <value name="transactionName">getLocationCodeCombination</value>
        <value name="transactionType">OUT</value>
        <null name="AcknowledgeSQL"/>
        <record name="LOCATION_CODE_COMBINATIONS" javaclass="com.wm.util.Values">
          <value name="SQLOut">SELECT LOCATION_ID FROM FA_LOCATIONS_KFV WHERE UPPER(CONCATENATED_SEGMENTS) = UPPER('&amp;CONCATENATED_LOCATION*')</value>
          <value name="SQLAlias">LOCATION_CODE_COMBINATIONS</value>
          <value name="SQLRelation"></value>
        </record>
      </record>
      <record name="getLocationId" javaclass="com.wm.data.ISMemDataImpl">
        <value name="transactionName">getLocationId</value>
        <value name="transactionType">OUT</value>
        <null name="AcknowledgeSQL"/>
        <record name="LOCID" javaclass="com.wm.util.Values">
          <value name="SQLOut">SELECT LOCATION_ID FROM HR_LOCATIONS WHERE 
UPPER(NVL(ADDRESS_LINE_1,'XXXX')) LIKE UPPER( NVL('&amp;ADDRESS_LINE_1*','XXXX')) AND 
UPPER(NVL(ADDRESS_LINE_2,'XXXX')) LIKE UPPER( NVL('&amp;ADDRESS_LINE_2*','XXXX')) AND 
UPPER(NVL(ADDRESS_LINE_3,'XXXX')) LIKE UPPER( NVL('&amp;ADDRESS_LINE_3*','XXXX')) AND 
UPPER(NVL(TOWN_OR_CITY,'XXXX')) LIKE UPPER( NVL('&amp;TOWN_OR_CITY*','XXXX')) AND 
UPPER(NVL(COUNTRY,'XXXX')) LIKE UPPER(NVL('&amp;COUNTRY*','XXXX')) AND 
UPPER(NVL(POSTAL_CODE,'XXXX')) LIKE UPPER(NVL('&amp;POSTAL_CODE*','XXXX')) AND 
UPPER(NVL(REGION_1,'XXXX')) LIKE UPPER(NVL('REGION_1*','XXXX')) AND 
UPPER(NVL(REGION_2,'XXXX')) LIKE UPPER(NVL('REGION_2*','XXXX')) AND
rownum = 1</value>
          <value name="SQLAlias">LOCID</value>
          <value name="SQLRelation"></value>
        </record>
      </record>
      <record name="getLocatorId" javaclass="com.wm.data.ISMemDataImpl">
        <value name="transactionName">getLocatorId</value>
        <value name="transactionType">OUT</value>
        <null name="AcknowledgeSQL"/>
        <record name="LOCATION_ID" javaclass="com.wm.util.Values">
          <value name="SQLOut">SELECT INVENTORY_LOCATION_ID
FROM MTL_ITEM_LOCATIONS_KFV M ,
ORG_ORGANIZATION_DEFINITIONS O 
WHERE CONCATENATED_SEGMENTS ='&amp;LOCATOR*'
AND  M.ORGANIZATION_ID =O.ORGANIZATION_ID 
AND O.ORGANIZATION_NAME='&amp;ORGANIZATION_NAME*'</value>
          <value name="SQLAlias">LOCATION_ID</value>
          <value name="SQLRelation"></value>
        </record>
      </record>
      <record name="getOASystemDate" javaclass="com.wm.data.ISMemDataImpl">
        <value name="transactionName">getOASystemDate</value>
        <value name="transactionType">OUT</value>
        <null name="AcknowledgeSQL"/>
        <record name="OASYSDATE" javaclass="com.wm.util.Values">
          <value name="SQLOut">select sysdate from dual</value>
          <value name="SQLAlias">OASYSDATE</value>
          <value name="SQLRelation"></value>
        </record>
      </record>
      <record name="getOracleAppsUserId" javaclass="com.wm.data.ISMemDataImpl">
        <value name="transactionName">getOracleAppsUserId</value>
        <value name="transactionType">OUT</value>
        <null name="AcknowledgeSQL"/>
        <record name="ORACLE_APPS_USER_ID" javaclass="com.wm.util.Values">
          <value name="SQLOut">SELECT USER_ID FROM FND_USER WHERE UPPER(user_name) = UPPER('&amp;ORACLE_APPS_USER_NAME*')</value>
          <value name="SQLAlias">ORACLE_APPS_USER_ID</value>
          <value name="SQLRelation"></value>
        </record>
      </record>
      <record name="getOrgId" javaclass="com.wm.data.ISMemDataImpl">
        <value name="transactionName">getOrgId</value>
        <value name="transactionType">OUT</value>
        <null name="AcknowledgeSQL"/>
        <record name="ORGID" javaclass="com.wm.util.Values">
          <value name="SQLOut">SELECT ORGANIZATION_ID FROM ORG_ORGANIZATION_DEFINITIONS WHERE ORGANIZATION_NAME = '&amp;ORGANIZATION_NAME*'</value>
          <value name="SQLAlias">ORGID</value>
          <value name="SQLRelation"></value>
        </record>
      </record>
      <record name="getOrgIdAndCode" javaclass="com.wm.data.ISMemDataImpl">
        <value name="transactionName">getOrgIdAndCode</value>
        <value name="transactionType">OUT</value>
        <null name="AcknowledgeSQL"/>
        <record name="ORG_ID_CODE" javaclass="com.wm.util.Values">
          <value name="SQLOut">SELECT ORGANIZATION_ID,ORGANIZATION_CODE FROM ORG_ORGANIZATION_DEFINITIONS WHERE ORGANIZATION_NAME = '&amp;ORGANIZATION_NAME*'</value>
          <value name="SQLAlias">ORG_ID_CODE</value>
          <value name="SQLRelation"></value>
        </record>
      </record>
      <record name="getProjectAndTaskId" javaclass="com.wm.data.ISMemDataImpl">
        <value name="transactionName">getProjectAndTaskId</value>
        <value name="transactionType">OUT</value>
        <null name="AcknowledgeSQL"/>
        <record name="PROJECT_TASK_ID" javaclass="com.wm.util.Values">
          <value name="SQLOut">SELECT PPA.PROJECT_ID, PT.TASK_ID
FROM PA_PROJECTS_ALL PPA, PA_TASKS PT
WHERE PPA.PROJECT_ID=PT.PROJECT_ID
AND PT.TASK_NAME='&amp;TASK_NAME*'
AND PPA.NAME='&amp;PROJECT_NAME*'</value>
          <value name="SQLAlias">PROJECT_TASK_ID</value>
          <value name="SQLRelation"></value>
        </record>
      </record>
      <record name="getProjectId" javaclass="com.wm.data.ISMemDataImpl">
        <value name="transactionName">getProjectId</value>
        <value name="transactionType">OUT</value>
        <null name="AcknowledgeSQL"/>
        <record name="PROJID" javaclass="com.wm.util.Values">
          <value name="SQLOut">SELECT PROJECT_ID FROM PA_PROJECTS_ALL
WHERE NAME = '&amp;PROJECT_NAME*'</value>
          <value name="SQLAlias">PROJID</value>
          <value name="SQLRelation"></value>
        </record>
      </record>
      <record name="getReasonId" javaclass="com.wm.data.ISMemDataImpl">
        <value name="transactionName">getReasonId</value>
        <value name="transactionType">OUT</value>
        <null name="AcknowledgeSQL"/>
        <record name="REASON_ID" javaclass="com.wm.util.Values">
          <value name="SQLOut">SELECT REASON_ID FROM MTL_TRANSACTION_REASONS WHERE UPPER(REASON_NAME) = UPPER('&amp;REASON_NAME*')</value>
          <value name="SQLAlias">REASON_ID</value>
          <value name="SQLRelation"></value>
        </record>
      </record>
      <record name="getResourceId" javaclass="com.wm.data.ISMemDataImpl">
        <value name="transactionName">getResourceId</value>
        <value name="transactionType">OUT</value>
        <null name="AcknowledgeSQL"/>
        <record name="RESOURCE_ID" javaclass="com.wm.util.Values">
          <value name="SQLOut">select resource_id from bom_resources b,org_organization_definitions o
where b.resource_code='&amp;resource_code*' and o.organization_id=b.organization_id
and o.organization_name='&amp;organization_name*'</value>
          <value name="SQLAlias">RESOURCE_ID</value>
          <value name="SQLRelation"></value>
        </record>
      </record>
      <record name="getTaskId" javaclass="com.wm.data.ISMemDataImpl">
        <value name="transactionName">getTaskId</value>
        <value name="transactionType">OUT</value>
        <null name="AcknowledgeSQL"/>
        <record name="TASKID" javaclass="com.wm.util.Values">
          <value name="SQLOut">SELECT TASKS.TASK_ID  FROM PA_PROJECTS_ALL PROJ , PA_TASKS  TASKS
WHERE PROJ.NAME = '&amp;PROJECT_NAME*'
AND PROJ.PROJECT_ID = TASKS.PROJECT_ID
AND TASKS.TASK_NUMBER = '&amp;TASK_NUMBER*'</value>
          <value name="SQLAlias">TASKID</value>
          <value name="SQLRelation"></value>
        </record>
      </record>
      <record name="getVendorSiteId" javaclass="com.wm.data.ISMemDataImpl">
        <value name="transactionName">getVendorSiteId</value>
        <value name="transactionType">OUT</value>
        <null name="AcknowledgeSQL"/>
        <record name="VENDOR_SITE_ID" javaclass="com.wm.util.Values">
          <value name="SQLOut">SELECT PVSA.VENDOR_SITE_ID  FROM PO_VENDOR_SITES_ALL PVSA,PO_VENDORS PV,ORG_ORGANIZATION_DEFINITIONS OOD
WHERE  UPPER( NVL(PVSA.ADDRESS_LINE1,'XXXX') ) = UPPER( NVL('&amp;ADDRESS_LINE1*','XXXX' )) 
AND  UPPER( NVL(PVSA.ADDRESS_LINE2,'XXXX') ) = UPPER( NVL('&amp;ADDRESS_LINE2*','XXXX')) 
AND UPPER( NVL(PVSA.ADDRESS_LINE3,'XXXX') ) = UPPER( NVL('&amp;ADDRESS_LINE3*','XXXX')) 
AND  UPPER( NVL(PVSA.CITY,'XXXX') ) = UPPER( NVL('&amp;CITY*','XXXX')) 
AND UPPER( NVL(PVSA.STATE,'XXXX') ) = UPPER( NVL('&amp;STATE*','XXXX'))
AND UPPER( NVL(PVSA.ZIP,'XXXX') ) = UPPER( NVL('&amp;ZIP*','XXXX')) 
AND UPPER( NVL(PVSA.COUNTRY,'XXXX') ) = UPPER( NVL('&amp;COUNTRY*','XXXX')) 
AND PV.VENDOR_ID = PVSA.VENDOR_ID
AND UPPER( NVL(PV.VENDOR_NAME,'XXXX') ) = UPPER( NVL('&amp;VENDOR_NAME*','XXXX')) 
AND OOD.ORGANIZATION_ID = PVSA.ORG_ID
AND UPPER (NVL (OOD.ORGANIZATION_NAME,'XXXX') ) = UPPER ( NVL ('&amp;ORGANIZATION_NAME*', 'XXXX'))</value>
          <value name="SQLAlias">VENDOR_SITE_ID</value>
          <value name="SQLRelation"></value>
        </record>
      </record>
      <record name="getVendorTxn" javaclass="com.wm.data.ISMemDataImpl">
        <value name="transactionName">getVendorTxn</value>
        <value name="transactionType">OUT</value>
        <null name="AcknowledgeSQL"/>
        <record name="VENDORS" javaclass="com.wm.util.Values">
          <value name="SQLOut">SELECT WEB_TRANSACTION_ID, DOCUMENT_TYPE,DOCUMENT_STATUS,
VENDOR_ID,VENDOR_NUMBER, VENDOR_NAME,ALTERNATE_VENDOR_NAME,VENDOR_TYPE,EMPLOYEE_NUMBER,EMPLOYEE_NAME,PARENT_VENDOR_NUMBER, PARENT_VENDOR_NAME, 
CUSTOMER_NUMBER, ONE_TIME_FLAG, 
MINIMUM_ORDER_AMOUNT,  
BILL_LOC_ADDRESS_LINE1, BILL_LOC_ADDRESS_LINE2, BILL_LOC_ADDRESS_LINE3, BILL_LOC_TOWN_OR_CITY, 
BILL_LOC_COUNTRY, BILL_LOC_POSTAL_CODE, BILL_LOC_REGION1, BILL_LOC_REGION2, 
SHIP_LOC_ADDRESS_LINE1, SHIP_LOC_ADDRESS_LINE2, 
SHIP_LOC_ADDRESS_LINE3, SHIP_LOC_TOWN_OR_CITY, SHIP_LOC_COUNTRY, SHIP_LOC_POSTAL_CODE, 
SHIP_LOC_REGION1, SHIP_LOC_REGION2,  SHIP_VIA, 
FREIGHT_TERMS, FOB, TERMS, SET_OF_BOOKS_NAME, 
SET_OF_BOOKS_SHORT_NAME, CREDIT_STATUS, CREDIT_LIMIT, ALWAYS_DISCOUNT_FLAG, 
PAY_DATE_BASIS, PAY_GROUP, PAYMENT_PRIORITY, INVOICE_CURRENCY_CODE, 
PAYMENT_CURRENCY_CODE, INVOICE_AMOUNT_LIMIT, EXCHANGE_DATE_CODE, HOLD_ALL_PAYMENTS, 
HOLD_FUTURE_PAYMENTS, HOLD_REASON, DISTRIBUTION_SET_NAME, SUPPLIER_LIABILITY_ACCOUNT, 
NUMBER_1099, TYPE_1099, WITHHOLDING_STATUS, WITHHOLDING_START_DATE, 
IRS_ORGANIZATION_TYPE, VAT_CODE, START_DATE_ACTIVE, END_DATE_ACTIVE, 
MINORITY_GROUP, PAYMENT_METHOD, BANK_ACCOUNT_NAME, BANK_ACCOUNT_NUMBER, 
BANK_NUMBER, BANK_ACCOUNT_TYPE, WOMEN_OWNED, SMALL_BUSINESS, 
STANDARD_INDUSTRY_CLASS, HOLD_FLAG, PURCHASING_HOLD_REASON, HOLD_BY_EMPLOYEE_NUMBER, 
PER_HOLD_BY_FULL_NAME, HOLD_DATE, TERMS_DATE_BASIS, PRICE_TOLERANCE, 
INSPECTION_REQUIRED, RECEIPT_REQUIRED_FLAG, QUANTITY_RECEIVED_TOLERANCE, DAYS_EARLY_RECEIPT_ALLOWED, 
DAYS_LATE_RECEIPT_ALLOWED, ALLOW_SUBSTITUTE_RECEIPTS, ALLOW_UNORDERED_RECEIPTS, HOLD_UNMATCHED_INVOICES, 
EXCLUSIVE_PAYMENT, TAX_VERIFICATION_DATE, STATE_REPORTABLE, FEDERAL_REPORTABLE, 
OFFSET_VAT, VAT_REGISTRATION_NUMBER, AUTO_CALCULATE_INTEREST, VALIDATION_NUMBER, 
EXCLUDE_FREIGHT_FROM_DISCOUNT, TAX_REPORTING_NAME, CHECK_DIGITS, BANK_NUM, 
AUTO_TAX_CALCULATION, AUTO_TAX_CALCULATION_OVERRIDE, AMOUNT_INCLUDES_TAX, 
BANK_CHARGE_BEARER, BANK_BRANCH_TYPE, MATCH_OPTION, FUTURE_DATED_PAYMENTS_ACCOUNT, 
CREATE_DEBIT_MEMO, OFFSET_FLAG FROM WM_PO_VENDORS_VW
WHERE ROWNUM &lt;= NVL('&amp;RECORDS_TO_FETCH*',100000)</value>
          <value name="SQLAlias">VENDORS</value>
          <value name="SQLRelation"></value>
          <record name="VENDOR_SITES" javaclass="com.wm.util.Values">
            <value name="SQLOut">SELECT VENDOR_SITE_ID,VENDOR_SITE_CODE,
ADDRESS_LINE1, ADDRESS_LINE2, 
ADDRESS_LINE3,CITY, STATE, ZIP, 
PROVINCE, COUNTRY, AREA_CODE, PHONE,ALTERNATE_ADDRESS_LINE,PURCHASING_SITE, RFQ_ONLY_SITE, PAY_SITE, ATTENTION_AR,
CUSTOMER_NUMBER,BILL_LOC_ADDRESS_LINE1, BILL_LOC_ADDRESS_LINE2, BILL_LOC_ADDRESS_LINE3, BILL_LOC_TOWN_OR_CITY, BILL_LOC_COUNTRY, BILL_LOC_POSTAL_CODE, BILL_LOC_REGION1, BILL_LOC_REGION2,SHIP_LOC_ADDRESS_LINE1, SHIP_LOC_ADDRESS_LINE2, SHIP_LOC_ADDRESS_LINE3, SHIP_LOC_TOWN_OR_CITY, SHIP_LOC_COUNTRY, SHIP_LOC_POSTAL_CODE, SHIP_LOC_REGION1, SHIP_LOC_REGION2, SHIP_VIA, FREIGHT_TERMS, FOB, 
INACTIVE_DATE, FAX, FAX_AREA_CODE, TELEX, 
PAYMENT_METHOD, BANK_ACCOUNT_NAME, BANK_ACCOUNT_NUMBER, BANK_NUM, 
BANK_ACCOUNT_TYPE, TERMS_DATE_BASIS,  VAT_CODE, 
DISTRIBUTION_SET_NAME, SUPPLIER_LIABILITY_ACCOUNT, PREPAY_ACCOUNT, PAY_GROUP, PAYMENT_PRIORITY, TERMS, INVOICE_AMOUNT_LIMIT, PAY_DATE_BASIS, 
ALWAYS_DISCOUNT_FLAG, INVOICE_CURRENCY_CODE, PAYMENT_CURRENCY_CODE, HOLD_ALL_PAYMENTS, 
HOLD_FUTURE_PAYMENTS, HOLD_REASON, HOLD_UNMATCHED_INVOICES, EXCLUSIVE_PAYMENT, 
TAX_REPORTING_SITE, VALIDATION_NUMBER, EXCLUDE_FREIGHT_FROM_DISCOUNT,
VAT_REGISTRATION_NUMBER, 
OFFSET_VAT, ORGANIZATION_NAME, ORGANIZATION_CODE, CHECK_DIGITS, BANK_NUMBER, ADDRESS_LINE4, COUNTY, ADDRESS_STYLE,ALLOW_AWT,WITHOLDING_TAX_GROUP,
AP_TAX_ROUNDING_RULE, AUTO_TAX_CALCULATION, AUTO_TAX_CALCULATION_OVERRIDE, AMOUNT_INCLUDES_TAX,BANK_CHARGE_BEARER, BANK_BRANCH_TYPE, PAY_ON_CODE, PAY_ON_RECEIPT_SUMMARY_CODE, PCARD_SITE, MATCH_OPTION, COUNTRY_OF_ORIGIN, FUTURE_DATED_PAYMENT_ACCOUNT, 
CREATE_DEBIT_MEMO, OFFSET_TAX,SELLING_COMPANY_IDENTIFIER,GAPLESS_INV_NUM_FLAG FROM WM_PO_VENDOR_SITES_ALL_VW</value>
            <value name="SQLAlias">VENDOR_SITES</value>
            <value name="SQLRelation">VENDOR_ID = VENDORS.VENDOR_ID</value>
            <record name="VENDOR_CONTACTS" javaclass="com.wm.util.Values">
              <value name="SQLOut">SELECT VENDOR_SITE_ID, 
 FIRST_NAME, MIDDLE_NAME, LAST_NAME, 
PREFIX, TITLE, MAIL_STOP, AREA_CODE, 
PHONE, ALTERNATE_CONTACT_NAME,INACTIVE_DATE,EMAIL_ADDRESS, URL, ALTERNATE_AREA_CODE, ALTERNATE_PHONE
FROM WM_PO_VENDOR_CONTACTS_VW</value>
              <value name="SQLAlias">VENDOR_CONTACTS</value>
              <value name="SQLRelation">VENDOR_SITE_ID = VENDOR_SITES.VENDOR_SITE_ID</value>
            </record>
            <record name="SITE_BANK_ACCOUNTS" javaclass="com.wm.util.Values">
              <value name="SQLOut">SELECT BANK_ACCOUNT_NAME, BANK_ACCOUNT_NUM, 
CURRENCY_CODE, BANK_NAME, BANK_NUMBER, BANK_BRANCH_NAME, 
BANK_NUM, END_DATE, START_DATE, PRIMARY, 
ORG_ID, ORGANIZATION_CODE, ORGANIZATION_NAME FROM WM_BANK_ACC_USE_VEND_SITES_VW</value>
              <value name="SQLAlias">SITE_BANK_ACCOUNTS</value>
              <value name="SQLRelation">VENDOR_SITE_ID = VENDOR_SITES.VENDOR_SITE_ID</value>
            </record>
          </record>
          <record name="BANK_ACCOUNTS" javaclass="com.wm.util.Values">
            <value name="SQLOut">SELECT BANK_ACCOUNT_NAME, BANK_ACCOUNT_NUM, 
CURRENCY_CODE, BANK_NAME, BANK_NUMBER, BANK_BRANCH_NAME, 
BANK_NUM, END_DATE, START_DATE, PRIMARY, 
ORG_ID, ORGANIZATION_CODE, ORGANIZATION_NAME FROM WM_BANK_ACCOUNT_USES_VENDOR_VW </value>
            <value name="SQLAlias">BANK_ACCOUNTS</value>
            <value name="SQLRelation">VENDOR_ID = VENDORS.VENDOR_ID</value>
          </record>
        </record>
      </record>
      <record name="getWIPEntityId" javaclass="com.wm.data.ISMemDataImpl">
        <value name="transactionName">getWIPEntityId</value>
        <value name="transactionType">OUT</value>
        <null name="AcknowledgeSQL"/>
        <record name="WIPENTITYID" javaclass="com.wm.util.Values">
          <value name="SQLOut">SELECT WIP_ENTITY_ID
FROM WIP_ENTITIES WIP, HR_ALL_ORGANIZATION_UNITS HOU
WHERE 
WIP.WIP_ENTITY_NAME ='&amp;WIP_ENTITY_NAME*'
AND HOU.ORGANIZATION_ID=WIP.ORGANIZATION_ID
AND HOU.NAME=NVL('&amp;ORGANIZATION_NAME*',HOU.NAME)</value>
          <value name="SQLAlias">WIPENTITYID</value>
          <value name="SQLRelation"></value>
        </record>
      </record>
      <record name="getWIPEntityType" javaclass="com.wm.data.ISMemDataImpl">
        <value name="transactionName">getWIPEntityType</value>
        <value name="transactionType">OUT</value>
        <null name="AcknowledgeSQL"/>
        <record name="ENTITY_TYPE" javaclass="com.wm.util.Values">
          <value name="SQLOut">select a.entity_type from wip_entities a, org_organization_definitions b where a.wip_entity_name='&amp;WIP_ENTITY_NAME*' and b.organization_name='&amp;ORGANIZATION_NAME*' and a.organization_id=b.organization_id</value>
          <value name="SQLAlias">ENTITY_TYPE</value>
          <value name="SQLRelation"></value>
        </record>
      </record>
      <record name="insertTransferERRInfo" javaclass="com.wm.data.ISMemDataImpl">
        <value name="transactionName">insertTransferERRInfo</value>
        <value name="transactionType">OUT</value>
        <value name="AcknowledgeSQL">INSERT INTO WM_TRACKCHANGES(WEB_TRANSACTION_ID, TRANSACTION_TYPE, TRANSACTION_ID, 
DATE_CREATED,TRANSACTION_STATUS,COMMENTS,PROCESSED_FLAG) 
VALUES(WM_WEB_TRANSACTION_S.NEXTVAL,'&amp;TRANSACTION_TYPE*','&amp;TRANSACTION_ID*',
SYSDATE,DECODE('&amp;TRANSACTION_STATUS*','INSERT',1,'UPDATE',0,2),'&amp;errorInfo*','N')</value>
      </record>
      <record name="lockTxnCtrl" javaclass="com.wm.data.ISMemDataImpl">
        <value name="transactionName">lockTxnCtrl</value>
        <value name="transactionType">OUT</value>
        <null name="AcknowledgeSQL"/>
        <record name="LOCK_CONTROL" javaclass="com.wm.util.Values">
          <value name="SQLOut">Wm_Track_Changes_Pkg.Lock_Control</value>
          <value name="SQLAlias">LOCK_CONTROL</value>
          <value name="SQLRelation"></value>
        </record>
      </record>
      <record name="pickSequence" javaclass="com.wm.data.ISMemDataImpl">
        <value name="transactionName">pickSequence</value>
        <value name="transactionType">OUT</value>
        <null name="AcknowledgeSQL"/>
        <record name="SEQ_NUMBER" javaclass="com.wm.util.Values">
          <value name="SQLOut">WM_UTILS_PKG.WM_PICK_SEQUENCE</value>
          <value name="SQLAlias">SEQ_NUMBER</value>
          <value name="SQLRelation"></value>
        </record>
      </record>
      <record name="purgeTrackChanges" javaclass="com.wm.data.ISMemDataImpl">
        <value name="transactionName">purgeTrackChanges</value>
        <value name="transactionType">OUT</value>
        <value name="AcknowledgeSQL">DELETE FROM WM_TRACKCHANGES 
WHERE WEB_TRANSACTION_ID &lt;='&amp;WEB_TRANSACTION_ID*' 
AND TRANSACTION_TYPE='&amp;TRANSACTION_TYPE*' 
AND TRANSACTION_ID='&amp;TRANSACTION_ID*'
AND PROCESSED_FLAG='N'</value>
      </record>
      <record name="purgeUnqualifiedRec" javaclass="com.wm.data.ISMemDataImpl">
        <value name="transactionName">purgeUnqualifiedRec</value>
        <value name="transactionType">OUT</value>
        <value name="AcknowledgeSQL">delete from wm_trackchanges wt
where wt.transaction_id in (select wtc.transaction_id 
from wm_track_changes_vw wtc
where wtc.transaction_id=wt.transaction_id
and wtc.transaction_type=wt.transaction_type
and wtc.transaction_status&gt;=3)
and wt.processed_flag='N'
and wt.transaction_type='&amp;TRANSACTION_TYPE*'</value>
      </record>
      <record name="unlockTxnCtrl" javaclass="com.wm.data.ISMemDataImpl">
        <value name="transactionName">unlockTxnCtrl</value>
        <value name="transactionType">OUT</value>
        <value name="AcknowledgeSQL">UPDATE WM_CONTROL SET STATUS='READY' WHERE TRANSACTION_TYPE='&amp;TRANSACTION_TYPE*'</value>
      </record>
      <record name="updateTrackChanges" javaclass="com.wm.data.ISMemDataImpl">
        <value name="transactionName">updateTrackChanges</value>
        <value name="transactionType">OUT</value>
        <value name="AcknowledgeSQL">UPDATE WM_TRACKCHANGES SET PROCESSED_FLAG='Y',DATE_PROCESSED= sysdate 
WHERE WEB_TRANSACTION_ID&lt;='&amp;WEB_TRANSACTION_ID*' 
AND TRANSACTION_TYPE='&amp;TRANSACTION_TYPE*'
AND TRANSACTION_ID='&amp;TRANSACTION_ID*'
AND PROCESSED_FLAG='N'</value>
      </record>
      <record name="updateUnqualifiedRec" javaclass="com.wm.data.ISMemDataImpl">
        <value name="transactionName">updateUnqualifiedRec</value>
        <value name="transactionType">OUT</value>
        <value name="AcknowledgeSQL">update wm_trackchanges wt
set wt.processed_flag='Y', wt.date_processed=sysdate
where wt.transaction_id in (select wtc.transaction_id 
from wm_track_changes_vw wtc
where wtc.transaction_id=wt.transaction_id
and wtc.transaction_type=wt.transaction_type
and wtc.transaction_status&gt;=3)
and wt.processed_flag='N'
and wt.transaction_type='&amp;TRANSACTION_TYPE*'
</value>
      </record>
    </record>
    <record name="FILE_INFO" javaclass="com.wm.data.ISMemDataImpl">
      <value name="OA_RELEASE">11510</value>
      <value name="DESCRIPTION">ReleaseOA.webmethods.com</value>
      <value name="CREATE_HOST">webMethods</value>
      <value name="CREATE_IM_VER"></value>
      <value name="CREATE_DATE">May 2, 2005 3:32:32 PM</value>
    </record>
  </record>
</IDataXMLCoder>
